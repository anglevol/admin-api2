<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenji.adminapi2.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.tenji.adminapi2.model.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="employee_id" jdbcType="VARCHAR" property="employeeid" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="employdate" jdbcType="DATE" property="employdate" />
    <result column="remaining_days" jdbcType="INTEGER" property="remainingDays" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="createdate" jdbcType="DATE" property="createdate" />
    <result column="updatedate" jdbcType="DATE" property="updatedate" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employee_id, user_id, name, department_code, gender, employdate, remaining_days,
    comment, createdate, updatedate,deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tenji.adminapi2.model.Employee">
    insert into employee (id, employee_id, user_id,
      name, department_code, gender,
      employdate, remaining_days, comment,
      createdate, updatedate)
    values (#{id,jdbcType=BIGINT}, #{employeeid,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
      #{employdate,jdbcType=DATE}, #{remainingDays,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR},
      #{createdate,jdbcType=DATE}, #{updatedate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.tenji.adminapi2.model.Employee" keyColumn="id" keyProperty="id"  useGeneratedKeys="true">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeid != null">
        employee_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="departmentCode != null">
        department_code,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="employdate != null">
        employdate,
      </if>
      <if test="remainingDays != null">
        remaining_days,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="updatedate != null">
        updatedate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeid != null">
        #{employee_id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        #{departmentCode,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="employdate != null">
        #{employdate,jdbcType=DATE},
      </if>
      <if test="remainingDays != null">
        #{remainingDays,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
      <if test="updatedate != null">
        #{updatedate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tenji.adminapi2.model.Employee">
    update employee
    <set>
      <if test="employeeid != null">
        employee_id = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="employdate != null">
        employdate = #{employdate,jdbcType=DATE},
      </if>
      <if test="remainingDays != null">
        remaining_days = #{remainingDays,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=DATE},
      </if>
      <if test="updatedate != null">
        updatedate = #{updatedate,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tenji.adminapi2.model.Employee">
    update employee
    set employee_id = #{employeeid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      employdate = #{employdate,jdbcType=DATE},
      remaining_days = #{remainingDays,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=DATE},
      updatedate = #{updatedate,jdbcType=DATE}

    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where user_Id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where name = #{name,jdbcType=VARCHAR} and deleted=0
  </select>
  <select id="selectByEmployeeId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where employee_id = #{employeeid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select b.* from (select row_number() over (partition by name order by createdate desc) as 'rowid',
    a.* from employee a) b where b.rowid=1 and b.deleted=0
    <if test="searchWord != null">
      and (b.employee_id like concat('%',#{searchWord,jdbcType=VARCHAR},'%') or
      b.name like concat('%',#{searchWord,jdbcType=VARCHAR},'%'))
    </if>
    order by b.id desc
  </select>
</mapper>
