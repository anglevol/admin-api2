<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenji.adminapi2.mapper.GrantedHolidayMapper">
  <resultMap id="BaseResultMap" type="com.tenji.adminapi2.model.GrantedHoliday">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="granted_service_years" jdbcType="FLOAT" property="grantedServiceYears" />
    <result column="granted_date" jdbcType="DATE" property="grantedDate" />
    <result column="expiry_date" jdbcType="DATE" property="expiryDate" />
    <result column="carryover_expiry_date" jdbcType="DATE" property="carryoverExpiryDate" />
    <result column="status_code" jdbcType="VARCHAR" property="statusCode" />
    <result column="granted_days" jdbcType="INTEGER" property="grantedDays" />
    <result column="used_days" jdbcType="INTEGER" property="usedDays" />
    <result column="unused_days" jdbcType="INTEGER" property="unusedDays" />
    <result column="remaining_days" jdbcType="INTEGER" property="remainingDays" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, employee_id, granted_service_years, granted_date, expiry_date, carryover_expiry_date,
    status_code, granted_days, used_days, unused_days, remaining_days, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from granted_holiday
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from granted_holiday
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tenji.adminapi2.model.GrantedHoliday">
    insert into granted_holiday (id, user_id, employee_id,
      granted_service_years, granted_date, expiry_date,
      carryover_expiry_date, status_code, granted_days,
      used_days, unused_days, remaining_days,
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT},
      #{grantedServiceYears,jdbcType=FLOAT}, #{grantedDate,jdbcType=DATE}, #{expiryDate,jdbcType=DATE},
      #{carryoverExpiryDate,jdbcType=DATE}, #{statusCode,jdbcType=VARCHAR}, #{grantedDays,jdbcType=INTEGER},
      #{usedDays,jdbcType=INTEGER}, #{unusedDays,jdbcType=INTEGER}, #{remainingDays,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tenji.adminapi2.model.GrantedHoliday">
    insert into granted_holiday
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="grantedServiceYears != null">
        granted_service_years,
      </if>
      <if test="grantedDate != null">
        granted_date,
      </if>
      <if test="expiryDate != null">
        expiry_date,
      </if>
      <if test="carryoverExpiryDate != null">
        carryover_expiry_date,
      </if>
      <if test="statusCode != null">
        status_code,
      </if>
      <if test="grantedDays != null">
        granted_days,
      </if>
      <if test="usedDays != null">
        used_days,
      </if>
      <if test="unusedDays != null">
        unused_days,
      </if>
      <if test="remainingDays != null">
        remaining_days,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="grantedServiceYears != null">
        #{grantedServiceYears,jdbcType=FLOAT},
      </if>
      <if test="grantedDate != null">
        #{grantedDate,jdbcType=DATE},
      </if>
      <if test="expiryDate != null">
        #{expiryDate,jdbcType=DATE},
      </if>
      <if test="carryoverExpiryDate != null">
        #{carryoverExpiryDate,jdbcType=DATE},
      </if>
      <if test="statusCode != null">
        #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="grantedDays != null">
        #{grantedDays,jdbcType=INTEGER},
      </if>
      <if test="usedDays != null">
        #{usedDays,jdbcType=INTEGER},
      </if>
      <if test="unusedDays != null">
        #{unusedDays,jdbcType=INTEGER},
      </if>
      <if test="remainingDays != null">
        #{remainingDays,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tenji.adminapi2.model.GrantedHoliday">
    update granted_holiday
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="grantedServiceYears != null">
        granted_service_years = #{grantedServiceYears,jdbcType=FLOAT},
      </if>
      <if test="grantedDate != null">
        granted_date = #{grantedDate,jdbcType=DATE},
      </if>
      <if test="expiryDate != null">
        expiry_date = #{expiryDate,jdbcType=DATE},
      </if>
      <if test="carryoverExpiryDate != null">
        carryover_expiry_date = #{carryoverExpiryDate,jdbcType=DATE},
      </if>
      <if test="statusCode != null">
        status_code = #{statusCode,jdbcType=VARCHAR},
      </if>
      <if test="grantedDays != null">
        granted_days = #{grantedDays,jdbcType=INTEGER},
      </if>
      <if test="usedDays != null">
        used_days = #{usedDays,jdbcType=INTEGER},
      </if>
      <if test="unusedDays != null">
        unused_days = #{unusedDays,jdbcType=INTEGER},
      </if>
      <if test="remainingDays != null">
        remaining_days = #{remainingDays,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tenji.adminapi2.model.GrantedHoliday">
    update granted_holiday
    set user_id = #{userId,jdbcType=BIGINT},
      employee_id = #{employeeId,jdbcType=BIGINT},
      granted_service_years = #{grantedServiceYears,jdbcType=FLOAT},
      granted_date = #{grantedDate,jdbcType=DATE},
      expiry_date = #{expiryDate,jdbcType=DATE},
      carryover_expiry_date = #{carryoverExpiryDate,jdbcType=DATE},
      status_code = #{statusCode,jdbcType=VARCHAR},
      granted_days = #{grantedDays,jdbcType=INTEGER},
      used_days = #{usedDays,jdbcType=INTEGER},
      unused_days = #{unusedDays,jdbcType=INTEGER},
      remaining_days = #{remainingDays,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByEmployeeId" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from granted_holiday
      where employee_id = #{employeeId,jdbcType=BIGINT}
  </select>
  <update id="updateStatus">
      update
          granted_holiday
      set
          status_code = #{statusCode},
          update_time = now()
      where
          id = #{id}
  </update>
    <update id="reduceHoliday">
      update
          granted_holiday
      set
          used_days = used_days + #{holiday},
          unused_days = unused_days - #{holiday},
          remaining_days = remaining_days - #{holiday},
          update_time = now()
      where
          id = #{id}
  </update>
</mapper>
